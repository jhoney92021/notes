--------------RAZOR VIEW ENGINE---------------
Now that we're using ASP.NET Core MVC, we have access to the Razor View Engine. 
The .cshtml file extension we've been using for views actually designates Razor files. 
Razor allows us to write HTML just as before,
    but with the added ability to write C# code directly in our views. 
In addition, we can embed HTML in our embedded C#,
     and switch between the two as much as we like.

We can put a block of code in our HTML by denoting it with an @ followed by curly braces. 
Inside these blocks we can perform any C# operations we want.
**********************************************
**********************************************
<!-- html/head tags removed for brevity -->
<body>
@{
    var StringList = new List<string>
    {
        "one",
        "two",
        "three",
        "four"
     };
        
    foreach(var word in StringList)
    {
        // We can render HTML from within C# code!
        <p>@word</p>
    }
}
</body>
**********************************************
We can write HTML in our C# block and it will be 
    rendered as the C# evaluates when the page is loaded. 
Note that in order to use the "word" variable inside our 
    HTML we have to preface it with the @ symbol again. 
We can nest C# inside HTML inside C# and so on as much as we like:
**********************************************
<!-- html/head tags removed for brevity -->
<body>
@{
    var StringList = new List<string>
    {
        "one",
        "two",
        "three",
        "four"
    };
        
    foreach(var word in StringList)
    {
        <div>
            <p>@word</p>
            @if(word.Length < 4)
            {
                 <p>@word is a short word</p>
            }
       </div>
    }
}
</body>
--------------RAZOR VIEW ENGINE---------------